# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets

#import Ui_Dialog as login_Ui
#from netdisk_re import Ui_Form as re_Ui
from register1 import Ui_RegisterWin as re_Ui
from login1 import Ui_LoginWin as login_Ui





'''
class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(811, 559)

        #左半背景
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(90, 100, 231, 341))
        self.label.setStyleSheet("background-color: rgb(228, 255, 246);")
        self.label.setText("")
        self.label.setObjectName("label")
        #右半背景
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(300, 100, 431, 341))
        self.label_2.setStyleSheet("background-image: url(:/images/2.jpg);")
        self.label_2.setObjectName("label_2")

        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(120, 160, 151, 51))

        #欢迎光临
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(20)

        #帐号密码线
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.lineEdit = QtWidgets.QLineEdit(Dialog)
        self.lineEdit.setGeometry(QtCore.QRect(120, 240, 141, 21))
        self.lineEdit.setStyleSheet("border:none;\n"
"background-color: rgb(228, 255, 246);\n"
"border-bottom:2px solid rgba(0,0,0,100);")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_2.setGeometry(QtCore.QRect(120, 300, 141, 21))
        self.lineEdit_2.setStyleSheet("border:none;\n"
"background-color: rgb(228, 255, 246);\n"
"border-bottom:2px solid rgba(0,0,0,100);")
        self.lineEdit_2.setObjectName("lineEdit_2")

        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(110, 370, 81, 41))
        self.pushButton.setObjectName("pushButton")

        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(200, 370, 81, 41))
        self.pushButton_2.setObjectName("pushButton_2")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label_2.setText(_translate("Dialog", "TextLabel"))
        self.label_3.setText(_translate("Dialog", "欢迎登录"))
        self.lineEdit.setPlaceholderText(_translate("Dialog", "账号："))
        self.lineEdit_2.setPlaceholderText(_translate("Dialog", "密码："))

        self.pushButton.setText(_translate("Dialog", "确定"))
        self.pushButton_2.setText(_translate("Dialog", "注册"))
import res_rc
'''

class LoginWindow(QtWidgets.QMainWindow,login_Ui):
    switch_window1 = QtCore.pyqtSignal()  # 跳转信号

    def __init__(self):
        super(LoginWindow, self).__init__()
        self.setupUi(self)
        self.register_2.clicked.connect(self.goRegister)

    def goRegister(self):
        self.switch_window1.emit()


# 操作窗口
class RegisterWindow(QtWidgets.QMainWindow,re_Ui):
    def __init__(self):
        super(RegisterWindow, self).__init__()
        self.setupUi(self)


class Controller:
    def __init__(self):
        pass
    def show_login(self):
        self.login = LoginWindow()
        self.login.switch_window1.connect(self.show_register)
        self.login.close()
        self.login.show()
    # 跳转到 operate 窗口, 注意关闭原页面
    def show_register(self):
        self.register = RegisterWindow()
        self.register.close()
        self.register.show()

class lr_button:

    def on_pushButton_register_clicked1(self):
        account1 = self.re_user.text()
        password1 = self.re_passwd.text()
        return 'event=login\naccount='+account1+'\npasswd='+password1+'\n'   #暂定


if __name__ == "__main__":
   '''
    app = QtWidgets.QApplication(sys.argv)  # 创建一个QApplication，也就是你要开发的软件app
    MainWindow = QtWidgets.QMainWindow()    # 创建一个QMainWindow，用来装载你需要的各种组件、控件
    ui = Ui_Dialog()                    # ui是Ui_MainWindow()类的实例化对象
    ui.setupUi(MainWindow)                  # 执行类中的setupUi方法，方法的参数是第二步中创建的QMainWindow
    MainWindow.show()                       # 执行QMainWindow的show()方法，显示这个QMainWindow
    sys.exit(app.exec_())                   # 使用exit()或者点击关闭按钮退出QApplication///
    '''
   app = QtWidgets.QApplication(sys.argv)
   controller = Controller()  # 控制器实例
   controller.show_login()  # 默认展示的是 hello 页面


   sys.exit(app.exec_())
